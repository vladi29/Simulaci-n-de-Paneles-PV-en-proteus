CCS PCM C Compiler, Version 5.095d, 1               12-Aug-20 19:08
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\Usuario\OneDrive\Escritorio\USB\Verano 2020\Electiva de Electronica de Potencia\Proyecto 2\Simulaci-n-de-Paneles-PV-en-proteus\PIC PWM\CodigoPic16f887.lst

               ROM used:   999 words (12%)
                           Largest free fragment is 2048
               RAM used:   38 (10%) at main() level
                           50 (14%) worst case
               Stack used: 1 locations
               Stack size: 8

0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   216
0003:  NOP
.................... //Vladimir Alfaro - Universidad Simón Bolívar - 09/08/2020 
.................... // Con este código se pretende diseñar el algoritmo de control MMPT para un microcontrolador PIC16F887
.................... //-----------------------------------------------------------------------------------------------------
.................... 
.................... #include <16f887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
0004:  MOVLW  8E
0005:  MOVWF  77
0006:  MOVF   3E,W
0007:  MOVWF  78
0008:  MOVF   3D,W
0009:  MOVWF  79
000A:  CLRF   7A
000B:  MOVF   78,F
000C:  BTFSS  03.2
000D:  GOTO   018
000E:  MOVF   79,W
000F:  MOVWF  78
0010:  CLRF   79
0011:  MOVLW  08
0012:  SUBWF  77,F
0013:  MOVF   78,F
0014:  BTFSS  03.2
0015:  GOTO   018
0016:  CLRF   77
0017:  GOTO   020
0018:  BCF    03.0
0019:  BTFSC  78.7
001A:  GOTO   01F
001B:  RLF    79,F
001C:  RLF    78,F
001D:  DECF   77,F
001E:  GOTO   018
001F:  BCF    78.7
0020:  RETURN
0021:  MOVF   3D,W
0022:  BTFSC  03.2
0023:  GOTO   091
0024:  MOVWF  45
0025:  MOVF   41,W
0026:  BTFSC  03.2
0027:  GOTO   091
0028:  ADDWF  45,F
0029:  BTFSC  03.0
002A:  GOTO   032
002B:  MOVLW  7F
002C:  SUBWF  45,F
002D:  BTFSS  03.0
002E:  GOTO   091
002F:  BTFSC  03.2
0030:  GOTO   091
0031:  GOTO   036
0032:  MOVLW  81
0033:  ADDWF  45,F
0034:  BTFSC  03.0
0035:  GOTO   091
0036:  MOVF   45,W
0037:  MOVWF  77
0038:  CLRF   78
0039:  CLRF   79
003A:  CLRF   7A
003B:  MOVF   3E,W
003C:  MOVWF  49
003D:  BSF    49.7
003E:  MOVF   3F,W
003F:  MOVWF  48
0040:  MOVF   40,W
0041:  MOVWF  47
0042:  MOVLW  18
0043:  MOVWF  45
0044:  CLRF   46
0045:  BTFSS  47.0
0046:  GOTO   05F
0047:  MOVF   44,W
0048:  ADDWF  7A,F
0049:  BTFSS  03.0
004A:  GOTO   051
004B:  INCF   79,F
004C:  BTFSS  03.2
004D:  GOTO   051
004E:  INCF   78,F
004F:  BTFSC  03.2
0050:  BSF    46.7
0051:  MOVF   43,W
0052:  ADDWF  79,F
0053:  BTFSS  03.0
0054:  GOTO   058
0055:  INCF   78,F
0056:  BTFSC  03.2
0057:  BSF    46.7
0058:  MOVF   42,W
0059:  MOVWF  3F
005A:  BSF    3F.7
005B:  MOVF   3F,W
005C:  ADDWF  78,F
005D:  BTFSC  03.0
005E:  BSF    46.7
005F:  RLF    46,F
0060:  RRF    78,F
0061:  RRF    79,F
0062:  RRF    7A,F
0063:  RRF    49,F
0064:  RRF    48,F
0065:  RRF    47,F
0066:  BCF    03.0
0067:  DECFSZ 45,F
0068:  GOTO   044
0069:  MOVLW  01
006A:  ADDWF  77,F
006B:  BTFSC  03.0
006C:  GOTO   091
006D:  BTFSC  78.7
006E:  GOTO   076
006F:  RLF    49,F
0070:  RLF    7A,F
0071:  RLF    79,F
0072:  RLF    78,F
0073:  DECF   77,F
0074:  BTFSC  03.2
0075:  GOTO   091
0076:  BTFSS  49.7
0077:  GOTO   087
0078:  INCF   7A,F
0079:  BTFSS  03.2
007A:  GOTO   087
007B:  INCF   79,F
007C:  BTFSS  03.2
007D:  GOTO   087
007E:  INCF   78,F
007F:  BTFSS  03.2
0080:  GOTO   087
0081:  RRF    78,F
0082:  RRF    79,F
0083:  RRF    7A,F
0084:  INCF   77,F
0085:  BTFSC  03.2
0086:  GOTO   091
0087:  MOVF   3E,W
0088:  MOVWF  46
0089:  MOVF   42,W
008A:  XORWF  46,F
008B:  BTFSS  46.7
008C:  GOTO   08F
008D:  BSF    78.7
008E:  GOTO   095
008F:  BCF    78.7
0090:  GOTO   095
0091:  CLRF   77
0092:  CLRF   78
0093:  CLRF   79
0094:  CLRF   7A
0095:  RETURN
0096:  MOVF   42,W
0097:  MOVWF  49
0098:  MOVF   46,W
0099:  XORWF  49,F
009A:  BTFSS  49.7
009B:  GOTO   0A1
009C:  BCF    03.2
009D:  BCF    03.0
009E:  BTFSC  42.7
009F:  BSF    03.0
00A0:  GOTO   0D4
00A1:  MOVF   42,W
00A2:  MOVWF  49
00A3:  MOVF   45,W
00A4:  MOVWF  4A
00A5:  MOVF   41,W
00A6:  SUBWF  4A,F
00A7:  BTFSC  03.2
00A8:  GOTO   0AF
00A9:  BTFSS  49.7
00AA:  GOTO   0D4
00AB:  MOVF   03,W
00AC:  XORLW  01
00AD:  MOVWF  03
00AE:  GOTO   0D4
00AF:  MOVF   46,W
00B0:  MOVWF  4A
00B1:  MOVF   42,W
00B2:  SUBWF  4A,F
00B3:  BTFSC  03.2
00B4:  GOTO   0BB
00B5:  BTFSS  49.7
00B6:  GOTO   0D4
00B7:  MOVF   03,W
00B8:  XORLW  01
00B9:  MOVWF  03
00BA:  GOTO   0D4
00BB:  MOVF   47,W
00BC:  MOVWF  4A
00BD:  MOVF   43,W
00BE:  SUBWF  4A,F
00BF:  BTFSC  03.2
00C0:  GOTO   0C7
00C1:  BTFSS  49.7
00C2:  GOTO   0D4
00C3:  MOVF   03,W
00C4:  XORLW  01
00C5:  MOVWF  03
00C6:  GOTO   0D4
00C7:  MOVF   48,W
00C8:  MOVWF  4A
00C9:  MOVF   44,W
00CA:  SUBWF  4A,F
00CB:  BTFSC  03.2
00CC:  GOTO   0D3
00CD:  BTFSS  49.7
00CE:  GOTO   0D4
00CF:  MOVF   03,W
00D0:  XORLW  01
00D1:  MOVWF  03
00D2:  GOTO   0D4
00D3:  BCF    03.0
00D4:  RETURN
00D5:  MOVLW  80
00D6:  BTFSC  03.1
00D7:  XORWF  42,F
00D8:  CLRF   47
00D9:  CLRF   48
00DA:  MOVF   3E,W
00DB:  MOVWF  46
00DC:  MOVF   42,W
00DD:  XORWF  46,F
00DE:  MOVF   3D,W
00DF:  BTFSC  03.2
00E0:  GOTO   1C5
00E1:  MOVWF  45
00E2:  MOVWF  77
00E3:  MOVF   41,W
00E4:  BTFSC  03.2
00E5:  GOTO   1CE
00E6:  SUBWF  45,F
00E7:  BTFSC  03.2
00E8:  GOTO   16A
00E9:  BTFSS  03.0
00EA:  GOTO   128
00EB:  MOVF   42,W
00EC:  MOVWF  4B
00ED:  BSF    4B.7
00EE:  MOVF   43,W
00EF:  MOVWF  4A
00F0:  MOVF   44,W
00F1:  MOVWF  49
00F2:  CLRF   48
00F3:  BCF    03.0
00F4:  RRF    4B,F
00F5:  RRF    4A,F
00F6:  RRF    49,F
00F7:  RRF    48,F
00F8:  DECFSZ 45,F
00F9:  GOTO   0F2
00FA:  BTFSS  46.7
00FB:  GOTO   0FF
00FC:  BSF    47.0
00FD:  GOTO   1E2
00FE:  BCF    47.0
00FF:  BCF    45.0
0100:  BSF    47.4
0101:  MOVLW  40
0102:  MOVWF  04
0103:  BCF    03.7
0104:  GOTO   1F7
0105:  BCF    47.4
0106:  BTFSC  46.7
0107:  GOTO   112
0108:  BTFSS  45.0
0109:  GOTO   11D
010A:  RRF    4B,F
010B:  RRF    4A,F
010C:  RRF    49,F
010D:  RRF    48,F
010E:  INCF   77,F
010F:  BTFSC  03.2
0110:  GOTO   1DD
0111:  GOTO   11D
0112:  BTFSC  4B.7
0113:  GOTO   120
0114:  BCF    03.0
0115:  RLF    48,F
0116:  RLF    49,F
0117:  RLF    4A,F
0118:  RLF    4B,F
0119:  DECF   77,F
011A:  BTFSC  03.2
011B:  GOTO   1DD
011C:  GOTO   112
011D:  BSF    47.6
011E:  GOTO   18A
011F:  BCF    47.6
0120:  MOVF   3E,W
0121:  MOVWF  46
0122:  BTFSS  46.7
0123:  GOTO   126
0124:  BSF    4B.7
0125:  GOTO   1D6
0126:  BCF    4B.7
0127:  GOTO   1D6
0128:  MOVF   41,W
0129:  MOVWF  45
012A:  MOVWF  77
012B:  MOVF   3D,W
012C:  SUBWF  45,F
012D:  MOVF   3E,W
012E:  MOVWF  4B
012F:  BSF    4B.7
0130:  MOVF   3F,W
0131:  MOVWF  4A
0132:  MOVF   40,W
0133:  MOVWF  49
0134:  CLRF   48
0135:  BCF    03.0
0136:  RRF    4B,F
0137:  RRF    4A,F
0138:  RRF    49,F
0139:  RRF    48,F
013A:  DECFSZ 45,F
013B:  GOTO   134
013C:  BTFSS  46.7
013D:  GOTO   141
013E:  BSF    47.1
013F:  GOTO   1E2
0140:  BCF    47.1
0141:  BCF    45.0
0142:  BSF    47.5
0143:  MOVLW  44
0144:  MOVWF  04
0145:  BCF    03.7
0146:  GOTO   1F7
0147:  BCF    47.5
0148:  BTFSC  46.7
0149:  GOTO   154
014A:  BTFSS  45.0
014B:  GOTO   15F
014C:  RRF    4B,F
014D:  RRF    4A,F
014E:  RRF    49,F
014F:  RRF    48,F
0150:  INCF   77,F
0151:  BTFSC  03.2
0152:  GOTO   1DD
0153:  GOTO   15F
0154:  BTFSC  4B.7
0155:  GOTO   162
0156:  BCF    03.0
0157:  RLF    48,F
0158:  RLF    49,F
0159:  RLF    4A,F
015A:  RLF    4B,F
015B:  DECF   77,F
015C:  BTFSC  03.2
015D:  GOTO   1DD
015E:  GOTO   154
015F:  BSF    47.7
0160:  GOTO   18A
0161:  BCF    47.7
0162:  MOVF   42,W
0163:  MOVWF  46
0164:  BTFSS  46.7
0165:  GOTO   168
0166:  BSF    4B.7
0167:  GOTO   1D6
0168:  BCF    4B.7
0169:  GOTO   1D6
016A:  MOVF   42,W
016B:  MOVWF  4B
016C:  BSF    4B.7
016D:  MOVF   43,W
016E:  MOVWF  4A
016F:  MOVF   44,W
0170:  MOVWF  49
0171:  BTFSS  46.7
0172:  GOTO   177
0173:  BCF    4B.7
0174:  BSF    47.2
0175:  GOTO   1E2
0176:  BCF    47.2
0177:  CLRF   48
0178:  BCF    45.0
0179:  MOVLW  40
017A:  MOVWF  04
017B:  BCF    03.7
017C:  GOTO   1F7
017D:  BTFSC  46.7
017E:  GOTO   1A0
017F:  MOVF   3E,W
0180:  MOVWF  46
0181:  BTFSS  45.0
0182:  GOTO   18A
0183:  RRF    4B,F
0184:  RRF    4A,F
0185:  RRF    49,F
0186:  RRF    48,F
0187:  INCF   77,F
0188:  BTFSC  03.2
0189:  GOTO   1DD
018A:  BTFSS  48.7
018B:  GOTO   19B
018C:  INCF   49,F
018D:  BTFSS  03.2
018E:  GOTO   19B
018F:  INCF   4A,F
0190:  BTFSS  03.2
0191:  GOTO   19B
0192:  INCF   4B,F
0193:  BTFSS  03.2
0194:  GOTO   19B
0195:  RRF    4B,F
0196:  RRF    4A,F
0197:  RRF    49,F
0198:  INCF   77,F
0199:  BTFSC  03.2
019A:  GOTO   1DD
019B:  BTFSC  47.6
019C:  GOTO   11F
019D:  BTFSC  47.7
019E:  GOTO   161
019F:  GOTO   1BF
01A0:  MOVLW  80
01A1:  XORWF  4B,F
01A2:  BTFSS  4B.7
01A3:  GOTO   1A8
01A4:  GOTO   1E2
01A5:  MOVF   42,W
01A6:  MOVWF  46
01A7:  GOTO   1B5
01A8:  MOVF   3E,W
01A9:  MOVWF  46
01AA:  MOVF   4B,F
01AB:  BTFSS  03.2
01AC:  GOTO   1B5
01AD:  MOVF   4A,F
01AE:  BTFSS  03.2
01AF:  GOTO   1B5
01B0:  MOVF   49,F
01B1:  BTFSS  03.2
01B2:  GOTO   1B5
01B3:  CLRF   77
01B4:  GOTO   1D6
01B5:  BTFSC  4B.7
01B6:  GOTO   1BF
01B7:  BCF    03.0
01B8:  RLF    48,F
01B9:  RLF    49,F
01BA:  RLF    4A,F
01BB:  RLF    4B,F
01BC:  DECFSZ 77,F
01BD:  GOTO   1B5
01BE:  GOTO   1DD
01BF:  BTFSS  46.7
01C0:  GOTO   1C3
01C1:  BSF    4B.7
01C2:  GOTO   1D6
01C3:  BCF    4B.7
01C4:  GOTO   1D6
01C5:  MOVF   41,W
01C6:  MOVWF  77
01C7:  MOVF   42,W
01C8:  MOVWF  4B
01C9:  MOVF   43,W
01CA:  MOVWF  4A
01CB:  MOVF   44,W
01CC:  MOVWF  49
01CD:  GOTO   1D6
01CE:  MOVF   3D,W
01CF:  MOVWF  77
01D0:  MOVF   3E,W
01D1:  MOVWF  4B
01D2:  MOVF   3F,W
01D3:  MOVWF  4A
01D4:  MOVF   40,W
01D5:  MOVWF  49
01D6:  MOVF   4B,W
01D7:  MOVWF  78
01D8:  MOVF   4A,W
01D9:  MOVWF  79
01DA:  MOVF   49,W
01DB:  MOVWF  7A
01DC:  GOTO   215
01DD:  CLRF   77
01DE:  CLRF   78
01DF:  CLRF   79
01E0:  CLRF   7A
01E1:  GOTO   215
01E2:  CLRF   48
01E3:  COMF   49,F
01E4:  COMF   4A,F
01E5:  COMF   4B,F
01E6:  COMF   48,F
01E7:  INCF   48,F
01E8:  BTFSS  03.2
01E9:  GOTO   1F0
01EA:  INCF   49,F
01EB:  BTFSS  03.2
01EC:  GOTO   1F0
01ED:  INCF   4A,F
01EE:  BTFSC  03.2
01EF:  INCF   4B,F
01F0:  BTFSC  47.0
01F1:  GOTO   0FE
01F2:  BTFSC  47.1
01F3:  GOTO   140
01F4:  BTFSC  47.2
01F5:  GOTO   176
01F6:  GOTO   1A5
01F7:  MOVF   00,W
01F8:  ADDWF  49,F
01F9:  BTFSS  03.0
01FA:  GOTO   201
01FB:  INCF   4A,F
01FC:  BTFSS  03.2
01FD:  GOTO   201
01FE:  INCF   4B,F
01FF:  BTFSC  03.2
0200:  BSF    45.0
0201:  DECF   04,F
0202:  MOVF   00,W
0203:  ADDWF  4A,F
0204:  BTFSS  03.0
0205:  GOTO   209
0206:  INCF   4B,F
0207:  BTFSC  03.2
0208:  BSF    45.0
0209:  DECF   04,F
020A:  MOVF   00,W
020B:  BTFSS  00.7
020C:  XORLW  80
020D:  ADDWF  4B,F
020E:  BTFSC  03.0
020F:  BSF    45.0
0210:  BTFSC  47.4
0211:  GOTO   105
0212:  BTFSC  47.5
0213:  GOTO   147
0214:  GOTO   17D
0215:  RETURN
.................... 
.................... #list
.................... 
.................... #device ADC = 10     // Conversor Analógico Digital con  10 bits de resolución
.................... #fuses XT, NOWDT, NOPROTECT, NOLVP, PUT, BROWNOUT, INTRC_IO
.................... #use delay(clock=4000000)
.................... #byte PORTA = 5
.................... 
.................... int16 duty = 20;
.................... int Timer2=9, PostCaler=1;// Preescaler;
.................... //Para 25KHz, el valor para modular el DutyCycle será 40 = 100%
.................... //Por lo tanto duty = 20 implica un DutyCycle de 50%
.................... float V1, V2=0, I1, I2=0, P1, P2;
.................... 
.................... void main(){
0216:  MOVF   03,W
0217:  ANDLW  1F
0218:  MOVWF  03
0219:  MOVLW  61
021A:  BSF    03.5
021B:  MOVWF  0F
021C:  CLRF   10
021D:  MOVF   0F,W
021E:  BCF    03.5
021F:  CLRF   21
0220:  MOVLW  14
0221:  MOVWF  20
0222:  MOVLW  09
0223:  MOVWF  22
0224:  MOVLW  01
0225:  MOVWF  23
0226:  CLRF   2B
0227:  CLRF   2A
0228:  CLRF   29
0229:  CLRF   28
022A:  CLRF   33
022B:  CLRF   32
022C:  CLRF   31
022D:  CLRF   30
022E:  MOVLW  FF
022F:  MOVWF  3C
0230:  BSF    03.5
0231:  BSF    03.6
0232:  MOVF   09,W
0233:  ANDLW  C0
0234:  MOVWF  09
0235:  BCF    03.6
0236:  BCF    1F.4
0237:  BCF    1F.5
0238:  MOVLW  00
0239:  BSF    03.6
023A:  MOVWF  08
023B:  BCF    03.5
023C:  CLRF   07
023D:  CLRF   08
023E:  CLRF   09
023F:  BCF    03.7
....................     
....................     //Para la PWM de 1Khz es necesario un Timer2=249, cuando la frecuencia del cristal es de 4Mhz,
....................     //el PostCaler=1 y Preescaler=4, en base a la siguiente fórmula:
....................     // Timer2 = (Td*fxtal/(4*Preescaler-PostCaler)) - 1
....................     //Timer2 = 10;                                    //Para este valor del Timer se puede alcanzar una f=25KHz
....................     //PostCaler = 1;                                  // Sólo puede tomar valores de 1, 4 o 16, igual que el preescaler
....................     //Preescaler = 4;
....................     set_tris_a(0b00000011);                           //Configuro los pines RA0 y RA1 como entradas
0240:  MOVLW  03
0241:  BSF    03.5
0242:  BCF    03.6
0243:  MOVWF  05
....................     setup_timer_2(t2_div_by_4, Timer2, PostCaler);    //Configuración del timer 2, preescaler=4, timer2=9, postcaler=1
0244:  MOVLW  01
0245:  BCF    03.5
0246:  SUBWF  23,W
0247:  MOVWF  78
0248:  RLF    78,W
0249:  MOVWF  77
024A:  RLF    77,F
024B:  RLF    77,F
024C:  MOVLW  F8
024D:  ANDWF  77,F
024E:  MOVF   77,W
024F:  IORLW  05
0250:  MOVWF  12
0251:  MOVF   22,W
0252:  BSF    03.5
0253:  MOVWF  12
....................     setup_ccp1(ccp_pwm);                              //Con esto estamos configurando el modo PWM en la salida ccp1 (pin RC2)
0254:  BCF    03.5
0255:  BCF    3C.2
0256:  MOVF   3C,W
0257:  BSF    03.5
0258:  MOVWF  07
0259:  BCF    03.5
025A:  BCF    07.2
025B:  MOVLW  0C
025C:  MOVWF  17
025D:  BSF    03.5
025E:  CLRF   1B
025F:  CLRF   1C
0260:  MOVLW  01
0261:  MOVWF  1D
....................     setup_adc_ports(all_analog);                      //Todos los puertos analogicos quedaran como analogicos
0262:  BSF    03.6
0263:  MOVF   09,W
0264:  ANDLW  C0
0265:  IORLW  1F
0266:  MOVWF  09
0267:  BCF    03.6
0268:  BCF    1F.4
0269:  BCF    1F.5
026A:  MOVLW  FF
026B:  BSF    03.6
026C:  MOVWF  08
....................     setup_adc(adc_clock_internal);                    //Configuramos la velocidad del ADC
026D:  BCF    03.5
026E:  BCF    03.6
026F:  BSF    1F.6
0270:  BSF    1F.7
0271:  BSF    03.5
0272:  BSF    1F.7
0273:  BCF    03.5
0274:  BSF    1F.0
....................     
....................     
....................     while(1){
....................     
....................        set_pwm1_duty(duty);         //Se confiugura el dutycycle de la PWM
0275:  MOVF   21,W
0276:  MOVWF  79
0277:  MOVF   20,W
0278:  MOVWF  78
0279:  RRF    79,F
027A:  RRF    78,F
027B:  RRF    79,F
027C:  RRF    78,F
027D:  RRF    79,F
027E:  MOVF   78,W
027F:  MOVWF  15
0280:  RRF    79,F
0281:  RRF    79,W
0282:  ANDLW  30
0283:  MOVWF  77
0284:  MOVF   17,W
0285:  ANDLW  CF
0286:  IORWF  77,W
0287:  MOVWF  17
....................        
....................        set_adc_channel(0);          //Selecciono el canal 0 (RA0)
0288:  MOVLW  00
0289:  MOVWF  78
028A:  MOVF   1F,W
028B:  ANDLW  C3
028C:  IORWF  78,W
028D:  MOVWF  1F
....................        delay_us(50);                //Retardo de 50 us para leer la data
028E:  MOVLW  10
028F:  MOVWF  77
0290:  DECFSZ 77,F
0291:  GOTO   290
0292:  NOP
....................        V1=read_adc();               //Guardo en bits el voltaje leido por el canal 0
0293:  BSF    1F.1
0294:  BTFSC  1F.1
0295:  GOTO   294
0296:  MOVF   1E,W
0297:  MOVWF  79
0298:  BSF    03.5
0299:  MOVF   1E,W
029A:  MOVWF  78
029B:  MOVF   79,W
029C:  MOVWF  7A
029D:  MOVF   1E,W
029E:  BCF    03.5
029F:  MOVWF  3D
02A0:  MOVF   79,W
02A1:  MOVWF  3E
02A2:  CALL   004
02A3:  MOVF   7A,W
02A4:  MOVWF  27
02A5:  MOVF   79,W
02A6:  MOVWF  26
02A7:  MOVF   78,W
02A8:  MOVWF  25
02A9:  MOVF   77,W
02AA:  MOVWF  24
....................        V1 = V1*0.0048828125;        //Valor real del voltaje medido
02AB:  MOVF   27,W
02AC:  MOVWF  40
02AD:  MOVF   26,W
02AE:  MOVWF  3F
02AF:  MOVF   25,W
02B0:  MOVWF  3E
02B1:  MOVF   24,W
02B2:  MOVWF  3D
02B3:  CLRF   44
02B4:  CLRF   43
02B5:  MOVLW  20
02B6:  MOVWF  42
02B7:  MOVLW  77
02B8:  MOVWF  41
02B9:  CALL   021
02BA:  MOVF   7A,W
02BB:  MOVWF  27
02BC:  MOVF   79,W
02BD:  MOVWF  26
02BE:  MOVF   78,W
02BF:  MOVWF  25
02C0:  MOVF   77,W
02C1:  MOVWF  24
....................        
....................        set_adc_channel(1);          //Selecciono el canal 1 (RA1)
02C2:  MOVLW  04
02C3:  MOVWF  78
02C4:  MOVF   1F,W
02C5:  ANDLW  C3
02C6:  IORWF  78,W
02C7:  MOVWF  1F
....................        delay_us(50);                //Retardo de 50 us para leer la data
02C8:  MOVLW  10
02C9:  MOVWF  77
02CA:  DECFSZ 77,F
02CB:  GOTO   2CA
02CC:  NOP
....................        I1=read_adc();               //Guardo en bits la corriente leida por el canal 1
02CD:  BSF    1F.1
02CE:  BTFSC  1F.1
02CF:  GOTO   2CE
02D0:  MOVF   1E,W
02D1:  MOVWF  79
02D2:  BSF    03.5
02D3:  MOVF   1E,W
02D4:  MOVWF  78
02D5:  MOVF   79,W
02D6:  MOVWF  7A
02D7:  MOVF   1E,W
02D8:  BCF    03.5
02D9:  MOVWF  3D
02DA:  MOVF   79,W
02DB:  MOVWF  3E
02DC:  CALL   004
02DD:  MOVF   7A,W
02DE:  MOVWF  2F
02DF:  MOVF   79,W
02E0:  MOVWF  2E
02E1:  MOVF   78,W
02E2:  MOVWF  2D
02E3:  MOVF   77,W
02E4:  MOVWF  2C
....................        I1= I1*0.0048828125;         //Valor real del voltaje medido
02E5:  MOVF   2F,W
02E6:  MOVWF  40
02E7:  MOVF   2E,W
02E8:  MOVWF  3F
02E9:  MOVF   2D,W
02EA:  MOVWF  3E
02EB:  MOVF   2C,W
02EC:  MOVWF  3D
02ED:  CLRF   44
02EE:  CLRF   43
02EF:  MOVLW  20
02F0:  MOVWF  42
02F1:  MOVLW  77
02F2:  MOVWF  41
02F3:  CALL   021
02F4:  MOVF   7A,W
02F5:  MOVWF  2F
02F6:  MOVF   79,W
02F7:  MOVWF  2E
02F8:  MOVF   78,W
02F9:  MOVWF  2D
02FA:  MOVF   77,W
02FB:  MOVWF  2C
....................    /*-----------Algoritmo MPPT----------*/
....................        P1 = V1*I1;
02FC:  MOVF   27,W
02FD:  MOVWF  40
02FE:  MOVF   26,W
02FF:  MOVWF  3F
0300:  MOVF   25,W
0301:  MOVWF  3E
0302:  MOVF   24,W
0303:  MOVWF  3D
0304:  MOVF   2F,W
0305:  MOVWF  44
0306:  MOVF   2E,W
0307:  MOVWF  43
0308:  MOVF   2D,W
0309:  MOVWF  42
030A:  MOVF   2C,W
030B:  MOVWF  41
030C:  CALL   021
030D:  MOVF   7A,W
030E:  MOVWF  37
030F:  MOVF   79,W
0310:  MOVWF  36
0311:  MOVF   78,W
0312:  MOVWF  35
0313:  MOVF   77,W
0314:  MOVWF  34
....................        P2 = V2*I2;
0315:  MOVF   2B,W
0316:  MOVWF  40
0317:  MOVF   2A,W
0318:  MOVWF  3F
0319:  MOVF   29,W
031A:  MOVWF  3E
031B:  MOVF   28,W
031C:  MOVWF  3D
031D:  MOVF   33,W
031E:  MOVWF  44
031F:  MOVF   32,W
0320:  MOVWF  43
0321:  MOVF   31,W
0322:  MOVWF  42
0323:  MOVF   30,W
0324:  MOVWF  41
0325:  CALL   021
0326:  MOVF   7A,W
0327:  MOVWF  3B
0328:  MOVF   79,W
0329:  MOVWF  3A
032A:  MOVF   78,W
032B:  MOVWF  39
032C:  MOVF   77,W
032D:  MOVWF  38
....................        
....................        if(P1 == P2){
032E:  MOVF   37,W
032F:  MOVWF  44
0330:  MOVF   36,W
0331:  MOVWF  43
0332:  MOVF   35,W
0333:  MOVWF  42
0334:  MOVF   34,W
0335:  MOVWF  41
0336:  MOVF   3B,W
0337:  MOVWF  48
0338:  MOVF   3A,W
0339:  MOVWF  47
033A:  MOVF   39,W
033B:  MOVWF  46
033C:  MOVF   38,W
033D:  MOVWF  45
033E:  CALL   096
033F:  BTFSS  03.2
0340:  GOTO   343
....................          return;
0341:  GOTO   3E6
....................        }
0342:  GOTO   3D5
....................        else{
....................          if(P1 - P2 > 0){
0343:  BSF    03.1
0344:  MOVF   37,W
0345:  MOVWF  40
0346:  MOVF   36,W
0347:  MOVWF  3F
0348:  MOVF   35,W
0349:  MOVWF  3E
034A:  MOVF   34,W
034B:  MOVWF  3D
034C:  MOVF   3B,W
034D:  MOVWF  44
034E:  MOVF   3A,W
034F:  MOVWF  43
0350:  MOVF   39,W
0351:  MOVWF  42
0352:  MOVF   38,W
0353:  MOVWF  41
0354:  CALL   0D5
0355:  MOVF   7A,W
0356:  MOVWF  40
0357:  MOVF   79,W
0358:  MOVWF  3F
0359:  MOVF   78,W
035A:  MOVWF  3E
035B:  MOVF   77,W
035C:  MOVWF  3D
035D:  CLRF   44
035E:  CLRF   43
035F:  CLRF   42
0360:  CLRF   41
0361:  MOVF   40,W
0362:  MOVWF  48
0363:  MOVF   3F,W
0364:  MOVWF  47
0365:  MOVF   3E,W
0366:  MOVWF  46
0367:  MOVF   3D,W
0368:  MOVWF  45
0369:  CALL   096
036A:  BTFSS  03.0
036B:  GOTO   3A1
....................             if(V1 - V2 > 0){
036C:  BSF    03.1
036D:  MOVF   27,W
036E:  MOVWF  40
036F:  MOVF   26,W
0370:  MOVWF  3F
0371:  MOVF   25,W
0372:  MOVWF  3E
0373:  MOVF   24,W
0374:  MOVWF  3D
0375:  MOVF   2B,W
0376:  MOVWF  44
0377:  MOVF   2A,W
0378:  MOVWF  43
0379:  MOVF   29,W
037A:  MOVWF  42
037B:  MOVF   28,W
037C:  MOVWF  41
037D:  CALL   0D5
037E:  MOVF   7A,W
037F:  MOVWF  40
0380:  MOVF   79,W
0381:  MOVWF  3F
0382:  MOVF   78,W
0383:  MOVWF  3E
0384:  MOVF   77,W
0385:  MOVWF  3D
0386:  CLRF   44
0387:  CLRF   43
0388:  CLRF   42
0389:  CLRF   41
038A:  MOVF   40,W
038B:  MOVWF  48
038C:  MOVF   3F,W
038D:  MOVWF  47
038E:  MOVF   3E,W
038F:  MOVWF  46
0390:  MOVF   3D,W
0391:  MOVWF  45
0392:  CALL   096
0393:  BTFSS  03.0
0394:  GOTO   39A
....................                duty = duty + 1;
0395:  MOVLW  01
0396:  ADDWF  20,F
0397:  BTFSC  03.0
0398:  INCF   21,F
....................             }
0399:  GOTO   3A0
....................             else{
....................                duty = duty - 1;
039A:  MOVLW  01
039B:  SUBWF  20,F
039C:  MOVLW  00
039D:  BTFSS  03.0
039E:  MOVLW  01
039F:  SUBWF  21,F
....................             }
....................          }
03A0:  GOTO   3D5
....................          else{
....................             if(V1 - V2 > 0){
03A1:  BSF    03.1
03A2:  MOVF   27,W
03A3:  MOVWF  40
03A4:  MOVF   26,W
03A5:  MOVWF  3F
03A6:  MOVF   25,W
03A7:  MOVWF  3E
03A8:  MOVF   24,W
03A9:  MOVWF  3D
03AA:  MOVF   2B,W
03AB:  MOVWF  44
03AC:  MOVF   2A,W
03AD:  MOVWF  43
03AE:  MOVF   29,W
03AF:  MOVWF  42
03B0:  MOVF   28,W
03B1:  MOVWF  41
03B2:  CALL   0D5
03B3:  MOVF   7A,W
03B4:  MOVWF  40
03B5:  MOVF   79,W
03B6:  MOVWF  3F
03B7:  MOVF   78,W
03B8:  MOVWF  3E
03B9:  MOVF   77,W
03BA:  MOVWF  3D
03BB:  CLRF   44
03BC:  CLRF   43
03BD:  CLRF   42
03BE:  CLRF   41
03BF:  MOVF   40,W
03C0:  MOVWF  48
03C1:  MOVF   3F,W
03C2:  MOVWF  47
03C3:  MOVF   3E,W
03C4:  MOVWF  46
03C5:  MOVF   3D,W
03C6:  MOVWF  45
03C7:  CALL   096
03C8:  BTFSS  03.0
03C9:  GOTO   3D1
....................                duty = duty - 1;
03CA:  MOVLW  01
03CB:  SUBWF  20,F
03CC:  MOVLW  00
03CD:  BTFSS  03.0
03CE:  MOVLW  01
03CF:  SUBWF  21,F
....................             }
03D0:  GOTO   3D5
....................             else{
....................                duty = duty + 1;
03D1:  MOVLW  01
03D2:  ADDWF  20,F
03D3:  BTFSC  03.0
03D4:  INCF   21,F
....................             }
....................          }
....................        }  
....................        V2 = V1;
03D5:  MOVF   27,W
03D6:  MOVWF  2B
03D7:  MOVF   26,W
03D8:  MOVWF  2A
03D9:  MOVF   25,W
03DA:  MOVWF  29
03DB:  MOVF   24,W
03DC:  MOVWF  28
....................        I2 = I1;
03DD:  MOVF   2F,W
03DE:  MOVWF  33
03DF:  MOVF   2E,W
03E0:  MOVWF  32
03E1:  MOVF   2D,W
03E2:  MOVWF  31
03E3:  MOVF   2C,W
03E4:  MOVWF  30
03E5:  GOTO   275
....................     }
.................... }
03E6:  SLEEP

Configuration Fuses:
   Word  1: 2FE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
